import clamd
import logging
import argparse
from logging.handlers import RotatingFileHandler
import pyfiglet

def configure_logging():
    logging.basicConfig(filename='scan.log', level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    return logging.getLogger('scanner')

def get_clamav_connection():
    try:
        return clamd.ClamdUnixSocket()
    except clamd.ConnectionError as e:
        raise ConnectionError(f"Failed to connect to ClamAV daemon: {e}")

def scan_file(filename, logger):
    try:
        clam = get_clamav_connection()
        scan_result = clam.scan(filename)
        
        if scan_result and 'FOUND' in scan_result.values():
            logger.error(f"{filename} is infected with malware: {scan_result['stream']}")
            print(f"{filename} is infected with malware: {scan_result['stream']}")
        else:
            logger.info(f"{filename} is clean")
            print(f"{filename} is clean")
    except FileNotFoundError as e:
        logger.error(f"File not found: {e}")
        print(f"Error: {e}")
    except Exception as e:
        logger.error(f"An unexpected error occurred: {e}")
        print(f"An unexpected error occurred: {e}")

def main():
    parser = argparse.ArgumentParser(description='File scanning using ClamAV')
    parser.add_argument('filename', help='File to scan')
    args = parser.parse_args()

    logger = configure_logging()
    scan_file(args.filename, logger)

if __name__ == '__main__':
    print(pyfiglet.figlet_format("MALWARE SCANNER"))
    main()
